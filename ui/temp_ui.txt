self.send_to_console(f'Dominguez Hills Observatory Controller V{version} initialized')
self.send_to_console(f'Created by Ayrik Nabirahni')

self.button_findazimuth.clicked.connect((lambda: self.find_azimuth_clicked(self.line_lat.text(), self.line_lon.text(), self.line_planet.text())))
self.button_pointtelescope.clicked.connect((lambda: self.point_telescope_clicked(self.line_lat.text(), self.line_lon.text(), self.line_planet.text(), self.line_motorsteps.text(), self.line_gearratio.text(), self.line_motorrpm.text())))

def send_to_console(self, text):
        self.console_textedit.insertPlainText(f"{str(text)} {'\n'}")

def find_azimuth_clicked(self, lat, lon, planet):
        lat = lat.strip()
        lon = lon.strip()
        planet_bary = (planet.strip()) + ' Barycenter'

        if lat != None and lon != None and planet_bary != None: 
            try:
                lat = float(lat)
                lon = float(lon)
                planet_bary = str(planet_bary)
            except ValueError:
                self.send_to_console('ERROR: One or multiple incorrect values detected. Please try again.')
                return None
            
            azimuth = get_azimuth(planet_bary, float(lat), float(lon))
            if azimuth == 'noplanet':
                self.send_to_console(f'ERROR: No planet by the name of "{planet}" found. Please try again.')
                return None

            self.send_to_console(f"Calculated Azimuth: {azimuth} degrees")
        else:
            self.send_to_console('ERROR: One or multiple invalid values detected. Please try again.')
            return None
        
def point_telescope_clicked(self, lat, lon, planet, motor_steps, gear_ratio, motor_rpm):
    lat = lat.strip()
    lon = lon.strip()
    planet_bary = (planet.strip()) + ' Barycenter'

    motor_steps = motor_steps.strip()
    gear_ratio = gear_ratio.strip()
    motor_rpm = motor_rpm.strip()




    if lat != None and lon != None and planet_bary != None and motor_steps != None and gear_ratio != None and motor_rpm != None: 
        try:
            lat = float(lat)
            lon = float(lon)
            planet_bary = str(planet_bary)
            motor_steps = int(motor_steps)
            gear_ratio = int(gear_ratio)
            motor_rpm = int(motor_rpm)
        except ValueError:
            self.send_to_console('ERROR: One or multiple incorrect values detected. Please try again.')
            return None
        
        azimuth = get_azimuth(planet_bary, float(lat), float(lon))
        if azimuth == 'noplanet':
            self.send_to_console(f'ERROR: No planet by the name of "{planet}" found. Please try again.')
            return None


        # TELESCOPE POINTING LOGIC GOES HERE -------------
        self.send_to_console(f'Opening serial at {arduino_port} on baud {baud_rate}')
        QtWidgets.QApplication.processEvents()  # Force GUI to process and update now

        arduino_test_loop(self)
        # TELESCOPE POINTING LOGIC GOES HERE -------------

    else:
        self.send_to_console('ERROR: One or multiple invalid values detected. Please try again.')
        return None
# Form implementation generated from reading ui file 'project.ui'
#
# Created by: PyQt6 UI code generator 6.9.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from config.config import *
from dhoc.angles.getazimuth import *
from dhoc.arduino.serialtest import *

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.line_lat = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.line_lat.setGeometry(QtCore.QRect(10, 40, 251, 20))
        self.line_lat.setAutoFillBackground(False)
        self.line_lat.setText("")
        self.line_lat.setClearButtonEnabled(False)
        self.line_lat.setObjectName("line_lat")
        self.label_lat = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_lat.setGeometry(QtCore.QRect(10, 20, 251, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_lat.setFont(font)
        self.label_lat.setObjectName("label_lat")
        self.label_lon = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_lon.setGeometry(QtCore.QRect(10, 80, 251, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_lon.setFont(font)
        self.label_lon.setObjectName("label_lon")
        self.line_lon = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.line_lon.setGeometry(QtCore.QRect(10, 100, 251, 20))
        self.line_lon.setText("")
        self.line_lon.setObjectName("line_lon")
        self.line_planet = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.line_planet.setGeometry(QtCore.QRect(10, 150, 251, 20))
        self.line_planet.setText("")
        self.line_planet.setObjectName("line_planet")
        self.label_planet = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_planet.setGeometry(QtCore.QRect(10, 130, 251, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_planet.setFont(font)
        self.label_planet.setObjectName("label_planet")
        self.button_findazimuth = QtWidgets.QPushButton(parent=self.centralwidget)
        self.button_findazimuth.setGeometry(QtCore.QRect(60, 190, 151, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.button_findazimuth.setFont(font)
        self.button_findazimuth.setObjectName("button_findazimuth")
        self.console_textedit = QtWidgets.QPlainTextEdit(parent=self.centralwidget)
        self.console_textedit.setEnabled(True)
        self.console_textedit.setGeometry(QtCore.QRect(0, 400, 801, 211))
        self.console_textedit.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.console_textedit.setReadOnly(True)
        self.console_textedit.setObjectName("console_textedit")
        self.label_output = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_output.setGeometry(QtCore.QRect(0, 370, 800, 31))
        font = QtGui.QFont()
        font.setPointSize(17)
        self.label_output.setFont(font)
        self.label_output.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_output.setObjectName("label_output")
        self.label_lon_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_lon_2.setGeometry(QtCore.QRect(540, 80, 251, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_lon_2.setFont(font)
        self.label_lon_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_lon_2.setObjectName("label_lon_2")
        self.line_motorsteps = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.line_motorsteps.setGeometry(QtCore.QRect(540, 40, 251, 20))
        self.line_motorsteps.setText("")
        self.line_motorsteps.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.line_motorsteps.setObjectName("line_motorsteps")
        self.line_motorrpm = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.line_motorrpm.setGeometry(QtCore.QRect(540, 150, 251, 20))
        self.line_motorrpm.setText("")
        self.line_motorrpm.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.line_motorrpm.setObjectName("line_motorrpm")
        self.button_pointtelescope = QtWidgets.QPushButton(parent=self.centralwidget)
        self.button_pointtelescope.setGeometry(QtCore.QRect(590, 190, 151, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.button_pointtelescope.setFont(font)
        self.button_pointtelescope.setObjectName("button_pointtelescope")
        self.line_gearratio = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.line_gearratio.setGeometry(QtCore.QRect(540, 100, 251, 20))
        self.line_gearratio.setText("")
        self.line_gearratio.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.line_gearratio.setObjectName("line_gearratio")
        self.label_motorrpm = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_motorrpm.setGeometry(QtCore.QRect(540, 130, 251, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_motorrpm.setFont(font)
        self.label_motorrpm.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_motorrpm.setObjectName("label_motorrpm")
        self.label_motorsteps = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_motorsteps.setGeometry(QtCore.QRect(540, 20, 251, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_motorsteps.setFont(font)
        self.label_motorsteps.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_motorsteps.setObjectName("label_motorsteps")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)




        self.send_to_console(f'Dominguez Hills Observatory Controller V{version} initialized')
        self.send_to_console(f'Created by Ayrik Nabirahni')
        self.button_findazimuth.clicked.connect((lambda: self.find_azimuth_clicked(self.line_lat.text(), self.line_lon.text(), self.line_planet.text())))
        self.button_pointtelescope.clicked.connect((lambda: self.point_telescope_clicked(self.line_lat.text(), self.line_lon.text(), self.line_planet.text(), self.line_motorsteps.text(), self.line_gearratio.text(), self.line_motorrpm.text())))


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "DH Observatory Controller"))
        self.line_lat.setPlaceholderText(_translate("MainWindow", "33.863907"))
        self.label_lat.setText(_translate("MainWindow", "Current Latitude (+ or -)"))
        self.label_lon.setText(_translate("MainWindow", "Current Longitude (+ or -)"))
        self.line_lon.setPlaceholderText(_translate("MainWindow", "-118.255190"))
        self.line_planet.setPlaceholderText(_translate("MainWindow", "Mars"))
        self.label_planet.setText(_translate("MainWindow", "Target Planet"))
        self.button_findazimuth.setText(_translate("MainWindow", "Show Azimuth"))
        self.label_output.setText(_translate("MainWindow", "Output"))
        self.label_lon_2.setText(_translate("MainWindow", "Gear Ratio (if none, enter 1)"))
        self.line_motorsteps.setPlaceholderText(_translate("MainWindow", "200"))
        self.line_motorrpm.setPlaceholderText(_translate("MainWindow", "3000"))
        self.button_pointtelescope.setText(_translate("MainWindow", "Point Telescope"))
        self.line_gearratio.setPlaceholderText(_translate("MainWindow", "100"))
        self.label_motorrpm.setText(_translate("MainWindow", "Motor RPM"))
        self.label_motorsteps.setText(_translate("MainWindow", "Stepper Motor Steps"))


        
    def send_to_console(self, text):
        self.console_textedit.insertPlainText(f"{str(text)} {'\n'}")

    def find_azimuth_clicked(self, lat, lon, planet):
        lat = lat.strip()
        lon = lon.strip()
        planet_bary = (planet.strip()) + ' Barycenter'

        if lat != None and lon != None and planet_bary != None: 
            try:
                lat = float(lat)
                lon = float(lon)
                planet_bary = str(planet_bary)
            except ValueError:
                self.send_to_console('ERROR: One or multiple incorrect values detected. Please try again.')
                return None
            
            azimuth = get_azimuth(planet_bary, float(lat), float(lon))
            if azimuth == 'noplanet':
                self.send_to_console(f'ERROR: No planet by the name of "{planet}" found. Please try again.')
                return None

            self.send_to_console(f"Calculated Azimuth: {azimuth} degrees")
        else:
            self.send_to_console('ERROR: One or multiple invalid values detected. Please try again.')
            return None
        
    def point_telescope_clicked(self, lat, lon, planet, motor_steps, gear_ratio, motor_rpm):
        lat = lat.strip()
        lon = lon.strip()
        planet_bary = (planet.strip()) + ' Barycenter'

        motor_steps = motor_steps.strip()
        gear_ratio = gear_ratio.strip()
        motor_rpm = motor_rpm.strip()




        if lat != None and lon != None and planet_bary != None and motor_steps != None and gear_ratio != None and motor_rpm != None: 
            try:
                lat = float(lat)
                lon = float(lon)
                planet_bary = str(planet_bary)
                motor_steps = int(motor_steps)
                gear_ratio = int(gear_ratio)
                motor_rpm = int(motor_rpm)
            except ValueError:
                self.send_to_console('ERROR: One or multiple incorrect values detected. Please try again.')
                return None
            
            azimuth = get_azimuth(planet_bary, float(lat), float(lon))
            if azimuth == 'noplanet':
                self.send_to_console(f'ERROR: No planet by the name of "{planet}" found. Please try again.')
                return None

            self.send_to_console('PLACEHOLDER: NEEDS POINT TELESCOPE CODE ADDED')
            arduino_test_loop()

        else:
            self.send_to_console('ERROR: One or multiple invalid values detected. Please try again.')
            return None
        
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
